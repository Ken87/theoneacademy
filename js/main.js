/** * forEach implementation for Objects/NodeLists/Arrays, automatic type loops and context options * * @private * @author Todd Motto * @link https://github.com/toddmotto/foreach * @param {Array|Object|NodeList} collection - Collection of items to iterate, could be an Array, Object or NodeList * @callback requestCallback      callback   - Callback function for each iteration. * @param {Array|Object|NodeList} scope=null - Object/NodeList/Array that forEach is iterating over, to use as the this value when executing callback. * @returns {} */var forEach = function(t, o, r) {  if ("[object Object]" === Object.prototype.toString.call(t))    for (var c in t) Object.prototype.hasOwnProperty.call(t, c) && o.call(r, t[c], c, t);  else    for (var e = 0, l = t.length; l > e; e++) o.call(r, t[e], e, t)};var hamburgers = document.querySelectorAll(".hamburger");if (hamburgers.length > 0) {  forEach(hamburgers, function(hamburger) {    hamburger.addEventListener("click", function() {      this.classList.toggle("is-active");    }, false);  });}$(document).ready(function(){  //Page Load Animation  $("body").fadeIn(500);  $('.hamburger').click(function(){    $('.nav-cover').fadeToggle(400);    $('.nav-cover').css('display', 'table');  });  $('#myMap').click(function () {      $('#myMap iframe').css("pointer-events", "none");   if( (navigator.platform.indexOf("iPhone") != -1)          || (navigator.platform.indexOf("iPod") != -1)          || (navigator.platform.indexOf("iPad") != -1))           window.open("maps://maps.google.com/maps?daddr=3.073377, 101.610060&amp;ll=");      else           window.open("http://maps.google.com/maps?daddr=3.073377, 101.610060&amp;ll=");  });  $("a").on("click", function() {    var href = $(this).attr("href");    var animDuration = 500;    // Do animation here; duration = animDuration.    $('body').fadeOut(animDuration);    setTimeout(function() {      window.location = href;    }, animDuration);    return false; // prevent user navigation away until animation's finished  });});